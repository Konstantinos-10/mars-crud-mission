package com.marsops.crudapp.model;

import jakarta.persistence.*;
import lombok.*;
import java.time.LocalDateTime;

/**
 * Represents a resource used on the Martian space station.
 * This creative entity includes additional details such as resource type,
 * a description, and the last restock time.
 */
@Entity
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Product {
    
    // Unique identifier for each product, auto-generated by the database.
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    // Name of the product (e.g., "Oxygen Tank", "Food Ration").
    private String name;
    
    // The current quantity of the product in stock.
    private int quantity;
    
    // A creative twist: the type of resource, such as "Fuel", "Food", "Oxygen", etc.
    private String resourceType;
    
    // A longer description that gives more details about the product.
    // For example, it might describe how the resource is used or stored on Mars.
    @Column(length = 1024)
    private String description;
    
    // The date and time when the product was last restocked.
    private LocalDateTime lastRestockDate;
    
    /**
     * Determines if the product is in a critical state.
     * For example, if the quantity is less than a critical threshold (here, 10),
     * the resource might need urgent replenishment.
     *
     * @return true if quantity is less than 10, false otherwise.
     */
    @Transient  // This field is not persisted in the database.
    public boolean isCritical() {
        return this.quantity < 10;
    }
}
